-- ~/.config/nvim/lua/custom/plugins/blink-zk-wikilink.lua
-- Registers a light, safe provider that only activates inside [[...]] context.
-- Provider module is exposed by zk_follow_create.lua as "zk_follow_create.completion".
return {
  'saghen/blink.cmp',
  optional = true,
  dependencies = { 'zk-org/zk-nvim' },
  opts = function(_, opts)
    opts.sources = opts.sources or {}
    opts.sources.providers = opts.sources.providers or {}
    opts.sources.per_filetype = opts.sources.per_filetype or {}

    -- Register provider
    opts.sources.providers.zk_wikilink = {
      name = 'ZK Wikilink',
      module = 'zk_follow_create.completion',
      score_offset = 80,
    }

    -- Ensure our provider is first for markdown
    local current = opts.sources.per_filetype.markdown
    if type(current) ~= 'table' then
      current = { 'zk_wikilink', 'lsp', 'path', 'snippets', 'buffer' }
    else
      local new, seen = { 'zk_wikilink' }, { zk_wikilink = true }
      for _, s in ipairs(current) do
        if not seen[s] then
          new[#new + 1] = s
          seen[s] = true
        end
      end
      current = new
    end
    opts.sources.per_filetype.markdown = current

    -- Conservative signature settings (prevents InsertEnter nil-source crashes)
    opts.signature = opts.signature or {}
    opts.signature.enabled = opts.signature.enabled ~= false and true or false

    return opts
  end,
}
